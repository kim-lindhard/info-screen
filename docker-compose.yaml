version: '2.1'

services:
  website:
    image: node:15
   # depends_on:
   #   hasura:
   #     condition: service_healthy
    ports:
      - ${APP_PORT:-8081}:8081
    environment:
      PORT: 8081
    volumes:
      - ./assemblies/website:/usr/src/website:delegated
    working_dir: /usr/src/website
    entrypoint: ['npm', 'run', 'start']
  hasura:
    image: hasura/graphql-engine:v2.0.7.cli-migrations-v3
    restart: always
    depends_on:
      database:
        condition: service_healthy
    ports:
      - '${HASURA_PORT:-8083}:8080'
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-postgres}@database:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_ADMIN_SECRET:-hasura}'
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key": "${HASURA_JWT_SECRET:-h2leOvdgjwpV0As5L8rZlV3VDVOsOmwk}"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: 'anonymous'
    volumes:
      - ./hasura/metadata:/hasura-metadata
    healthcheck:
      test: ['CMD', 'wget', '-qO', '-', 'http://hasura:8080/healthz']
      interval: 5s
      timeout: 5s
      retries: 20
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    healthcheck:
        test: ['CMD-SHELL', 'pg_isready -U postgres']
        interval: 10s
        timeout: 5s
        retries: 60
  db-migration:
    build: 
      context: ./db
      dockerfile: Dockerfile    
    depends_on:
      - database
    # volumes:
    #   - ${PWD}/db/export:/tmp
    environment:
      - "DEBUG=1"                     # enable script debugging
      #- "LOCAL_DEVELOPMENT=1"         # will try to CREATE DATABASE ${PGDATABASE}
      - "PGDATABASE=postgres"     # database name
      - "PGHOST=database"             # same as avove - docker-compose service name
      - "PGPORT=5432"                 # same as above
      - "PGUSER=postgres"             # same as above
      - "PGPASSWORD=postgres"                # same as above
      - "PGSSLMODE=disable"           # ignore SSLMODE for local development (overwritten - see ./db/Dockerfile)